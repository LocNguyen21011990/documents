<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>Start node</description>
        </text-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Start">
    <segment>
      <node>
        <start-node name="Start" secure="false"/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Training-CallNodeStart"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="jump">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="training/JumpnodeTemplate.isml"/>
              </interaction-node>
              <node-display x="1" y="2"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="ok">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="training/testing.isml"/>
              </interaction-node>
              <node-display x="0" y="2"/>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="CallNodeStart">
    <segment>
      <node>
        <start-node call-mode="private" name="CallNodeStart" secure="false"/>
        <node-display x="3" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="jump"/>
        <node-display x="0" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_4">
    <segment>
      <node>
        <text-node>
          <description>Interaction node</description>
        </text-node>
        <node-display x="0" y="4"/>
      </node>
    </segment>
  </branch>
  <branch basename="Start1">
    <segment>
      <node>
        <start-node name="Start1" secure="false"/>
        <node-display x="1" y="5"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <jump-node start-name-ref="Training-CallJumpNode"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CallJumpNode">
    <segment>
      <node>
        <start-node call-mode="private" name="CallJumpNode" secure="false"/>
        <node-display x="3" y="5"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="training/JumpnodeTemplate.isml"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetProduct">
    <segment>
      <node>
        <start-node name="GetProduct" secure="false"/>
        <node-display x="1" y="8"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="demoscripts/getProducts.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="CurrentHttpParameterMap.pid.stringValue" key="productID"/>
          <key-binding alias="Product" key="Product"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="training/DisplayProduct.isml"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="DemoLoopNode">
    <segment>
      <node>
        <start-node name="DemoLoopNode" secure="false"/>
        <node-display x="3" y="8"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Testing" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="0" key="From_0"/>
          <key-binding alias="count" key="To_0"/>
          <key-binding alias="new Array(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;)" key="From_1"/>
          <key-binding alias="currentArray" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <loop-node element-key="a" iterator-key="currentArray"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="do">
          <transition target-connector="in"/>
          <segment>
            <node>
              <decision-node condition-key="a&lt;=3" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="count+1" key="From_0"/>
                      <key-binding alias="count" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
                <bend-point relative-to="target" x="1" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="2"/>
            </node>
            <transition target-connector="loop" target-path="..">
              <transition-display>
                <bend-point relative-to="source" x="-1" y="0"/>
                <bend-point relative-to="target" x="-1" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="training/LoopTemplate.isml"/>
        </interaction-node>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="DemoScript">
    <segment>
      <node>
        <start-node name="DemoScript" secure="false"/>
        <node-display x="1" y="15"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="CurrentHttpParameterMap.pid.stringValue !=null" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="demoscripts/getProducts.ds"/>
                <key-binding alias="logerror" key="ScriptLog"/>
                <key-binding alias="CurrentHttpParameterMap.pid.stringValue" key="productID"/>
                <key-binding alias="Product" key="Product"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../+1"/>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="training/ScriptTemplate.isml"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in2" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node name="error"/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="DemoVariableScope">
    <segment>
      <node>
        <start-node name="DemoVariableScope" secure="false"/>
        <node-display x="4" y="15"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="training/VariableScope.isml"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="DemoGetVariableScope">
    <segment>
      <node>
        <start-node name="DemoGetVariableScope" secure="false"/>
        <node-display x="4" y="18"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="training/GetSessionVariable"/>
        </interaction-node>
        <node-display x="0" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetCustomObj">
    <segment>
      <node>
        <start-node name="GetCustomObj" secure="false"/>
        <node-display x="1" y="23"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="demoscripts/createCustomObj.ds"/>
          <key-binding alias="logerror" key="ScriptLog"/>
          <key-binding alias="CurrentHttpParameterMap.ID.stringValue" key="ID"/>
          <key-binding alias="CurrentHttpParameterMap.Name.stringValue" key="Name"/>
          <key-binding alias="myCustomObj" key="myCustomObj"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="training/DisplayCustomObj.isml"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateCustomObjbyForm">
    <segment>
      <node>
        <start-node name="CreateCustomObjbyForm" secure="false"/>
        <node-display x="2" y="26"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.customobj" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="(myCustomObj==null)? CurrentHttpParameterMap.ID.stringValue  : myCustomObj.custom.ID" key="From_0"/>
          <key-binding alias="customObjID" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="demoscripts/createCustomObj.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="customObjID" key="ID"/>
          <key-binding alias="myCustomObj" key="myCustomObj"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1/b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <config-property key="Clear" value="false"/>
          <key-binding alias="CurrentForms.customobj" key="Form"/>
          <key-binding alias="myCustomObj" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-continue-node secure="false" start-name="testingForm" transaction-required="false">
          <template buffered="true" dynamic="false" name="form/customobj"/>
        </interaction-continue-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="add">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="demoscripts/createCustomObjForAdd.ds"/>
                <key-binding alias="logerror" key="ScriptLog"/>
                <key-binding alias="CurrentForms.customobj.ID.value" key="ID"/>
                <key-binding alias="myCustomObj" key="myCustomObj"/>
              </pipelet-node>
              <node-display x="-1" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="./b3.1">
                  <transition-display>
                    <bend-point relative-to="source" x="2" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="UpdateObjectWithForm" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.customobj" key="Form"/>
                <key-binding alias="myCustomObj" key="Object"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="error">
                <transition target-connector="in1">
                  <transition-display>
                    <bend-point relative-to="source" x="2" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="2" y="-5"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <end-node name="error"/>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="target" x="0" y="4"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="-1" y="-4"/>
            </node>
            <transition target-connector="in2" target-path=".."/>
          </segment>
        </branch>
        <branch basename="b4" source-connector="update">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="demoscripts/updateCustomObj.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="CurrentForms.customobj.firstname.value" key="firstName"/>
                <key-binding alias="CurrentForms.customobj.ID.value" key="ID"/>
                <key-binding alias="CurrentForms.customobj.lastname.value" key="lastName"/>
                <key-binding alias="CurrentForms.customobj.email.value" key="Name"/>
                <key-binding alias="myCustomObj" key="myCustomObj"/>
                <key-binding alias="CurrentForms.customobj.email.value" key="Email"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in2" target-path="../b3.1/b3.1">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                    <bend-point relative-to="target" x="1" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
                <bend-point relative-to="source" x="4" y="1"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="2" y="-4"/>
            </node>
            <transition target-connector="in1" target-path=".."/>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
</pipeline>
